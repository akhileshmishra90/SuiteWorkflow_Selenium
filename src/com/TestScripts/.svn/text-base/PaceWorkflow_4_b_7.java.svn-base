package com.TestScripts;

import static org.junit.Assert.assertTrue;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.support.PageFactory;

import com.TestScripts.RetryTest.Retry;
//import com.applitools.eyes.Eyes;
import com.gui_auto.base_classes.GUI_automation_base;
import com.gui_auto.base_classes.GUI_automation_properties;
import com.gui_auto.dao.ReadAndUpdate;
import com.gui_auto.pages.DCPage;
import com.gui_auto.pages.JobBillingPage;
import com.gui_auto.pages.JobCostingPage;
import com.gui_auto.pages.Login;
import com.gui_auto.pages.RegisterPage;
import com.gui_auto.pages.WorkflowIntegrationPage;
import com.gui_auto.utilities.CommonFunctions;
import com.gui_auto.utilities.Locators;
import com.gui_auto.utilities.ScreenShot;

public class PaceWorkflow_4_b_7 extends GUI_automation_base
{
	ReadAndUpdate dbConnection = new ReadAndUpdate();
	ScreenShot TakeScreenshot = new ScreenShot();
	String browser= _properties.getProperty(GUI_automation_properties.BASEURL);
	String sFile = _properties.getProperty(GUI_automation_properties.ScreenShotPath);
	//public static Eyes eyes;
	
	long maxWait=10000;
	File directory = new File(sFile);

	private RegisterPage _register;
	RetryTest Retry = new RetryTest();

	@Rule
	public Retry retry = Retry.new Retry(1);

	@Before
	public void setUp() throws Exception
	{		
		//eyes = new Eyes();
		//eyes.setApiKey("U4H2HXkiij105f7H1jedc103H9d2tRA8Hdua6DepWhuic110");
		//eyes.setForceFullPageScreenshot(true);
	}

	public String dateReturn()
	{	
		Date date = new Date();
		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy-HH:mm");	
		return sdf.format(date);
	}

	@After
	public void tearDown() throws Exception 
	{		   
		_driver.quit();
	}
	
	@Test
	public void TC_4_7 () throws Exception
	{	
		//=======================================================================
		//Constant ones....
		//=======================================================================
		
		String sSheetName="IntegrationWF";
		String  sScenario = "WorkFlow";
		String dater = dateReturn();
		String sTestcase = dbConnection.ReadFunction("PresentWorkflow", "PresentWorkflow", "PresentWorkflow", "TestCase_Executing");
		dbConnection.UpdateFunction(sSheetName,sScenario,sTestcase,"Executed_On",dater);
		//========================================================================
		
		String Exec_Required= dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "Execution_Required");
		
		if (Exec_Required.equalsIgnoreCase("Yes"))
		{
			try
			{
				String PaceURL=dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "PACEURL");
				String PaceUserN=dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "PACEUserName");
				String PacePass=dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "PACEPassword");
				String PaceCompany=dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "PACECompany");
				String PaceServer=dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "PACEServer");
				
				String sJobNumber= dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "PACE_Job_Num");
				
				String sShipmentCost = "$20.00", sShipmentCostDisplayed ="", sDSFOrderStatus = "", sJobValue = "", sInvoiceAmount = "", sInvoiceNum = "";
								
				//========================================== verify Updated Job plans in Pace =============================================================		
				
				super.setUp(getBrowser());
				_register = PageFactory.initElements(_driver, RegisterPage.class);
				_register.launchapplication(PaceURL);
				_driver.manage().window().maximize();
				_driver.manage().timeouts().implicitlyWait(20,TimeUnit.SECONDS);
				
				DCPage DC = new DCPage(_driver);
				WorkflowIntegrationPage WIP = new WorkflowIntegrationPage(_driver);
				JobCostingPage JC = new JobCostingPage(_driver);
				JobBillingPage JB = new JobBillingPage(_driver);
				Login Login1 = new Login(_driver);
				
				System.out.println("Loging in to Pace");
				DC.EpaceLogin(PaceUserN, PacePass, PaceCompany);
						
				//==========================================================================
				//===================verify the Job costs created for the completed DC and Inventory transactions===========================
				//==========================================================================
				System.out.println("Navigate to each Job Part Job Costs page and verify the Job Cost created");
				for (int i=2; i<=3; i++)
				{
					String sJobPart = "0"+i;
					WIP.JobPartJobCostPage(sJobNumber, sJobPart, PaceServer, PaceCompany);
					CommonFunctions.waitForPageLoaded(_driver);
					CommonFunctions.ClickElement(_driver, By.xpath("//a[text()='Unposted Job Costs']"));
					int iRwCnt = _driver.findElements(By.xpath("//table[@id='JobCost_N10022']/tbody/tr")).size();			
					if (iRwCnt == 2)
					{
						System.out.println("The system created 2 Job costs");				
						CommonFunctions.SetOriginalWindowHandle(_driver);
						CommonFunctions.ClickElement(_driver, By.xpath("//table[@id='JobCost_N10022']/tbody/tr[1]/td[2]/div/a/img"));
						Thread.sleep(2000);
						CommonFunctions.SwitchToWindow(_driver, "Job Cost");
						String sTranactionType = CommonFunctions.GetSelectedOption(_driver, By.name(Locators.getProperty(Locators.Job_Cost_TransactionType)));
						_driver.close();
						CommonFunctions.ReturnToOriginalWindow(_driver);
						
						CommonFunctions.ClickElement(_driver, By.xpath("//table[@id='JobCost_N10022']/tbody/tr[2]/td[2]/div/a/img"));
						Thread.sleep(2000);
						CommonFunctions.SwitchToWindow(_driver, "Job Cost");
						String sTranactionType1 = CommonFunctions.GetSelectedOption(_driver, By.name(Locators.getProperty(Locators.Job_Cost_TransactionType)));
						_driver.close();
						CommonFunctions.ReturnToOriginalWindow(_driver);
						
						if ((sTranactionType.equals("Inventory") || sTranactionType.equals("Data Collection")) && (sTranactionType1.equals("Inventory") || sTranactionType1.equals("Data Collection")) && (!sTranactionType.equals(sTranactionType1)))
						{
							System.out.println("Job costs with correct transaction type were created");							
						}
						else
						{
							System.err.println("Job Part = "+sJobPart+", Job Cost Transaction Type, Job Cost 1 = "+sTranactionType1+", Job Cost 2 = "+sTranactionType1);
							Assert.fail("Job Part = "+sJobPart+", Transaction Type, Job Cost 1 = "+sTranactionType1+", Job Cost 2 = "+sTranactionType1);
						}
					}
					else
					{
						System.err.println("Incorrect number of Job Costs were created, expected = 2, Actual = "+iRwCnt);
					}
				}
				
				//==========================================================================
				//===================Complete Job shipment========================
				//==========================================================================
				String sJobShipmentID = dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "JobShipmentID");
				
				System.out.println("Navigate to Job Shipment Detail page");
				WIP.navigateToJobShipmentDetailpage(sJobShipmentID, PaceServer, PaceCompany);
				
				System.out.println("Ship the Job in PACE");
				CommonFunctions.selectDropdownByText(_driver, By.xpath(Locators.getProperty(Locators.Job_Shipment_ShipmentType)), "Final Shipment");
				if (!CommonFunctions.Elementdisplayed_Enabled(_driver.findElement(By.name("cost"))))
				{
					CommonFunctions.ClickElement(_driver, By.xpath("//fieldset[@id='shipmentDetails']/legend/span"));
				}	    	
				CommonFunctions.SendValue(_driver, By.name("cost"), sShipmentCost);
				CommonFunctions.SendValue(_driver, By.name("weight"), "10");
				DC.Update();
			
				String sJobStatus = CommonFunctions.getText(_driver, By.xpath("//label[text()='Admin Status']/../../div/div[1]/a"));
				if (sJobStatus.equals("Shipped"))
				{
					System.out.println("Job status was changed to Shipped");
				}
				else
				{
					System.err.println("Job status was NOT changed to Shipped");
					Assert.fail("Job status was NOT changed to Shipped");
				}
				
				//==========================================================================
				//===================verify the Job costs created for the shipment completion===========================
				//==========================================================================
				System.out.println("Navigate to Job Part Job Costs page and verify the Job Cost created");
				WIP.JobPartJobCostPage(sJobNumber, "01", PaceServer, PaceCompany);
				CommonFunctions.waitForPageLoaded(_driver);
				CommonFunctions.ClickElement(_driver, By.xpath("//a[text()='Unposted Job Costs']"));
				int iRwCnt = _driver.findElements(By.xpath("//table[@id='JobCost_N10022']/tbody/tr")).size();			
				if (iRwCnt == 1)
				{
					String sTranactionType = "", sJobCost = "";
					String sNotes = CommonFunctions.getText(_driver, By.xpath("//table[@id='JobCost_N10022']/tbody/tr[1]/td[7]/div"));
					CommonFunctions.SetOriginalWindowHandle(_driver);
					CommonFunctions.ClickElement(_driver, By.xpath("//table[@id='JobCost_N10022']/tbody/tr[1]/td[2]/div/a/img"));
					Thread.sleep(2000);
					CommonFunctions.SwitchToWindow(_driver, "Job Cost");
					sTranactionType = CommonFunctions.GetSelectedOption(_driver, By.name(Locators.getProperty(Locators.Job_Cost_TransactionType)));
					sJobCost = CommonFunctions.GetValue(_driver, By.name("cost"));
					CommonFunctions.CloseWindow(_driver, "Job Cost");
					CommonFunctions.ReturnToOriginalWindow(_driver);
					
					if (sTranactionType.equals("Job Shipment") && sJobCost.contains("$20.00") && sNotes.equals(sJobNumber))
					{
						System.out.println("Job cost with correct transaction type and cost was created");
					}
					else
					{
						System.out.println("Transaction type, Expected = Job Shipment, Actual = "+sTranactionType+
											"\nJob Cost Value, Expected = $20.00, Actual = "+sJobCost+
											"\nJob Cost Notes, Expected = "+sJobNumber+", Actual = "+sNotes);
						TakeScreenshot.ScreenShotWindow(_driver, sTestcase);
						Assert.fail("Transaction type, Expected = Job Shipment, Actual = "+sTranactionType+
								"\nJob Cost Value, Expected = 20, Actual = "+sJobCost+
								"\nJob Cost Notes, Expected = "+sJobNumber+", Actual = "+sNotes);
					}
				}
				else
				{
					System.err.println("Incorrect number of Job Costs were created, expected = 1, Actual = "+iRwCnt);
				}
				
				//==========================================================================
				//===================Approve Job costs and post them========================
				//==========================================================================
				WIP.navigateToApproveJobCostsPage(PaceServer, PaceCompany);
				JC.ApproveJobCostTransaction(sJobNumber);
				WIP.navigateToPostJobCostsPage(PaceServer, PaceCompany);
				JC.PostJobCostTransaction("All Types", "t", "", "", false, "", "", "");
				CommonFunctions.waitForPageLoaded(_driver);
				
				System.out.println("Go to each Job Part and verify the Job Costs are posted");
				WIP.JobPartJobCostPage(sJobNumber, "01", PaceServer, PaceCompany);
				CommonFunctions.waitForPageLoaded(_driver);
				CommonFunctions.ClickElement(_driver, By.xpath("//a[text()='Unposted Job Costs']"));
				iRwCnt = _driver.findElements(By.xpath("//table[@id='JobCost_N10022']/tbody/tr")).size();			
				if (iRwCnt > 0)
				{
					System.err.println("All the Job costs are not posted for Job Part");
					TakeScreenshot.ScreenShotWindow(_driver, sTestcase);
					Assert.fail("All the Job costs are not posted for Job Part");
				}
				
				//==========================================================================
				//===================Verify Job Status in DSF===========================
				//==========================================================================
								
				String DSFSiteUrl=dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "SiteUrl");
				String DSFUserName=dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "USERNAME");
				String DSFPassWord=dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "PASSWORD");
				String sDSFOrderNumber = dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "Order_Number");
				
				_register.launchapplication(DSFSiteUrl);
				_driver.manage().window().maximize();
				_driver.manage().timeouts().implicitlyWait(20,TimeUnit.SECONDS);
				
				//Login as user
				Login1.LoginToDSF(sSheetName, sScenario, sTestcase, DSFUserName, DSFPassWord);
				
				//verify order status and shipment details
				CommonFunctions.ClickElement(_driver, By.xpath("//div[@class='myaccount-label']/span[3]"));
				Thread.sleep(1000);
				CommonFunctions.ClickElement(_driver, By.xpath("//li[text()='Order History & Status']"));
				CommonFunctions.waitForPageLoaded(_driver);
				Thread.sleep(2000);
				
				if (CommonFunctions.isElementPresent(_driver, By.xpath("//a[contains(text(), '"+sDSFOrderNumber+"')]")))
				{
					CommonFunctions.ClickElement(_driver, By.xpath("//a[contains(text(), '"+sDSFOrderNumber+"')]"));
					CommonFunctions.waitForPageLoaded(_driver);
					CommonFunctions.waitForPageLoaded(_driver);
					
					sDSFOrderStatus = CommonFunctions.getText(_driver, By.xpath("//div[@class='checkout-order-info']/div[@class='order-status']/div[1]/h3"));
					if (sDSFOrderStatus.equals("Shipped"))
					{
						System.out.println("DSF Order status was changed to Shipped");						
						
						//verify shipment details
						if (CommonFunctions.isElementPresent(_driver, By.xpath("//div[@class='partial-shipment-table ng-scope'][1]/table//table")))
						{
							System.out.println("Shipment details were displayed");
							
							sShipmentCostDisplayed = CommonFunctions.GetText(_driver, By.xpath("//div[@class='partial-shipment-table ng-scope'][1]/table//table/tbody/tr[1]/td[5]"));
							
							if (sShipmentCostDisplayed.contains(sShipmentCost))
							{
								System.out.println("Correct Shipment details were displayed for Product");
							}
							else
							{
								System.err.println("Shipment Cost, Expected = "+sShipmentCost+", Actual ="+sShipmentCostDisplayed);
								TakeScreenshot.ScreenShotWindow(_driver, sTestcase);
								Assert.fail("Incorrect shipment details were displayed in DSF for product");
							}
						}
						else
						{
							System.err.println("Shipment details are not displayed");
							TakeScreenshot.ScreenShotWindow(_driver, sTestcase);
							Assert.fail("Shipment details are not displayed");
						}
					}
					else
					{
						System.err.println("DSF Order was not updated with Shipped Status");
						TakeScreenshot.ScreenShotWindow(_driver, sTestcase);
						Assert.fail("DSF Order was not updated with Shipped Status");
					}					
				}
				else
				{
					System.err.println("DSF Order was not present");
					TakeScreenshot.ScreenShotWindow(_driver, sTestcase);
					Assert.fail("DSF Order was not present");
				}
				
				//==========================================================================
				//===================verify Job Status in PACE========================
				//==========================================================================
				_register.launchapplication(PaceURL);
				_driver.manage().window().maximize();
				_driver.manage().timeouts().implicitlyWait(20,TimeUnit.SECONDS);
				
				System.out.println("Log on to Pace");
				DC.EpaceLogin(PaceUserN, PacePass, PaceCompany);
				
				System.out.println("Navigate to Job Detail Page");
				WIP.NavigateToJob(sJobNumber, PaceServer, PaceCompany);
				assertTrue("Job Status was not changed to Shipped", CommonFunctions.GetSelectedOption(_driver, By.name(Locators.getProperty(Locators.Job_Status))).equals("Shipped"));
				CommonFunctions.ClickElement(_driver, By.xpath("//a[text()='Billing Info']"));
				sJobValue = CommonFunctions.getText(_driver, By.xpath("//label[text()='Job Value']/../following-sibling::div/div"));
				dbConnection.UpdateFunction(sSheetName, sScenario, sTestcase, "JobValue", sJobValue);
				
				//==========================================================================
				//===================Add an invoice to the Job and Process and Post the invoice and verify receivables in customer detail page========================
				//==========================================================================
				
				System.out.println("Create an Invoice Batch");
				
				sJobValue = dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "DSFSubTotal");
				String sDSFTax = dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "DSFTaxAmount");
				String sDSFShipping = dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "DSFShippingAmount");
				String sDSFHandling = dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "DSFHandlingAmount");
				
				WIP.NavigateToEnterNewBatch(PaceServer, PaceCompany);
				DC.Add();
				String sInvoiceBatchID = CommonFunctions.GetIdFromUrl(_driver);
				
				System.out.println("Add an invoice to the Invoice Batch created above");
				WIP.NavigateToEnterNewInvoicePage(PaceServer, PaceCompany);
				WIP.AddNewInvoice(sJobNumber, sInvoiceBatchID);
				CommonFunctions.waitForPageLoaded(_driver);
				Thread.sleep(2000);
				String sInvoiceTotal = CommonFunctions.getText(_driver, By.xpath("//fieldset[contains(@id, 'InvoiceLine')]//td[@class='group-1 totals grandTotals']"));
				String sShippingTotal = CommonFunctions.GetValue(_driver, By.xpath("//table[@id='InvoiceExtra_N101B2']/tbody/tr[2]//input[@name='InvoiceExtra_N101B2.price']"));
				String sHandlingTotal = CommonFunctions.GetValue(_driver, By.xpath("//table[@id='InvoiceExtra_N101B2']/tbody/tr[1]//input[@name='InvoiceExtra_N101B2.price']"));
				String sTaxTotal = CommonFunctions.getText(_driver, By.xpath("//fieldset[contains(@id, 'InvoiceTrnTaxDist')]//td[@class='group-1 totals grandTotals'][2]"));
				
				if (sInvoiceTotal.contains(sJobValue) && sHandlingTotal.contains(sDSFHandling) && sShippingTotal.contains(sDSFShipping) && sTaxTotal.contains(sDSFTax))
				{
					System.out.println("System created a Invoice correctly");
				}
				else
				{
					System.err.println("Invoice Total, Expected = "+sJobValue+", Actual = "+sInvoiceTotal+
										"\nHandling Total, Expected = "+sDSFHandling+", Actual = "+sHandlingTotal+
										"\nShipping Total, Expected = "+sDSFShipping+", Actual = "+sShippingTotal+
										"\nTax Total, Expected = "+sDSFTax+", Actual = "+sTaxTotal);
					TakeScreenshot.ScreenShotWindow(_driver, sTestcase);
					Assert.fail("System did not create Invoice with correct details");
				}
				sInvoiceAmount = CommonFunctions.getText(_driver, By.xpath("//label[text()='Invoice Amount']/../following-sibling::div/div"));
				dbConnection.UpdateFunction(sSheetName, sScenario, sTestcase, "InvoiceAmount", sInvoiceAmount);
				
				WIP.ApprovedInvoiceBatch(sInvoiceBatchID, PaceServer, PaceCompany);
				sInvoiceNum = CommonFunctions.GetValue(_driver, By.xpath("//table[contains(@id, 'Invoice_N')]/tbody/tr/td[4]/input"));
				if(sInvoiceNum.equals("") || sInvoiceNum == null)
				{
					CommonFunctions.SendValue(_driver, By.xpath("//table[contains(@id, 'Invoice_N')]/tbody/tr/td[4]/input"), sJobNumber+"1");
					DC.Update();
				}
				sInvoiceNum = CommonFunctions.GetValue(_driver, By.xpath("//table[contains(@id, 'Invoice_N')]/tbody/tr/td[4]/input"));
				System.out.println("Created new Invoice "+sInvoiceNum);
				dbConnection.UpdateFunction(sSheetName, sScenario, sTestcase, "InvoiceNumber", sInvoiceNum);
				JB.ProcessApprovedBatch();
				_driver.navigate().refresh();
				CommonFunctions.waitForPageLoaded(_driver);
				JB.PostApprovedBatch1();
				
				System.out.println("Go to Customer details page > on Context, click on Receivable link, Verify the invoice number & amount are shown.");
				if (WIP.VerifyInvoiceDetailsInCustReceivables("PANDORA", sInvoiceNum, sInvoiceAmount, PaceServer, PaceCompany))
				{
					System.out.println("The invoice number & amount are shown correctly in customer receivables page");
				}
				else
				{
					TakeScreenshot.ScreenShotWindow(_driver, sTestcase);
					Assert.fail("The invoice number & amount are NOT shown correctly in customer receivables page");
				}
				
				//==========================================================================
				//===================Receive the Payment (Receive & Process & Post)========================
				//==========================================================================
				
				System.out.println("Enter the new Batch");
				WIP.NavigateToAddPaymentBatchPage(PaceServer, PaceCompany);
				DC.Add();				
				String sPaymentBatchID = CommonFunctions.getIDfromURL(_driver);
				System.out.println("New payment batch id "+sPaymentBatchID+" is created");
				
				sInvoiceNum = dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "InvoiceNumber");
				sInvoiceAmount = dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "InvoiceAmount");
				
				System.out.println("Enter Payments , on payment select invoice number & Check the Pay Boolean and click update.");
				WIP.AddPayment("PANDORA", sInvoiceNum, sInvoiceAmount);
				CommonFunctions.ClickElement(_driver, By.xpath("//table[@id='PaymentTrnLine_N100D7']/thead/tr/th[13]//a[text()='(all)']"));
				DC.Update();
				
				if (!WIP.ApproveAndPostPaymentBatch(sPaymentBatchID, PaceServer, PaceCompany))
				{
					TakeScreenshot.ScreenShotWindow(_driver, sTestcase);
					Assert.fail("Payment is not received");
				}
								
				if(WIP.VerifyPaymentDetailsInCustPayables("PANDORA", sInvoiceAmount, PaceServer, PaceCompany))
				{
					System.out.println("Customer balances are updated correctly and Payments are recorded in customer payments page");
				}
				else
				{
					Assert.fail("Customer Payments are NOT recorded in customer payments page");
				}
				
				DC.Logout();
				
				//==========================================================================
				//===================Verify Job Status in DSF===========================
				//==========================================================================
				
				_register.launchapplication(DSFSiteUrl);
				_driver.manage().window().maximize();
				_driver.manage().timeouts().implicitlyWait(20,TimeUnit.SECONDS);
				
				//Login as user
				Login1.LoginToDSF(sSheetName, sScenario, sTestcase, DSFUserName, DSFPassWord);
				
				//verify order status and Invoice details
				sInvoiceNum = dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "InvoiceNumber");
				sInvoiceAmount = dbConnection.ReadFunction(sSheetName, sScenario, sTestcase, "InvoiceAmount");
				
				CommonFunctions.ClickElement(_driver, By.xpath("//div[@class='myaccount-label']/span[3]"));
				Thread.sleep(1000);
				CommonFunctions.ClickElement(_driver, By.xpath("//li[text()='Order History & Status']"));
				CommonFunctions.waitForPageLoaded(_driver);
				Thread.sleep(2000);
				
				if (CommonFunctions.isElementPresent(_driver, By.xpath("//a[contains(text(), '"+sDSFOrderNumber+"')]")))
				{
					//verify Invoice details
					int iOrdersCnt = CommonFunctions.RowCount(_driver, By.xpath("//div[@class='myaccount-orderhistory-table']/table/tbody/tr"));
					for (int i=1; i<=iOrdersCnt; i++)
					{
						if (CommonFunctions.isElementPresent(_driver, By.xpath("//div[@class='myaccount-orderhistory-table']/table/tbody/tr["+i+"]//a[contains(text(), '"+sDSFOrderNumber+"')]")))
						{
							sDSFOrderStatus = CommonFunctions.getText(_driver, By.xpath("//div[@class='myaccount-orderhistory-table']/table/tbody/tr["+i+"]/td[1]/div[1]/table/tbody/tr/td[2]/h4"));
							if (sDSFOrderStatus.equals("Completed And Invoiced"))
							{
								System.out.println("DSF Order status was changed to Completed and Invoiced");
								
								String sinvoiceNumberDisplayed = CommonFunctions.getText(_driver, By.xpath("//div[@class='myaccount-orderhistory-table']/table/tbody/tr["+i+"]/td[1]/div[2]/table/tbody/tr/td[1]/span"));
								String sInvoiceAmountDisplayed = CommonFunctions.getText(_driver, By.xpath("//div[@class='myaccount-orderhistory-table']/table/tbody/tr["+i+"]/td[1]/div[2]/table/tbody/tr/td[2]/span"));
								boolean bInvoiceFileExists = CommonFunctions.isElementPresent(_driver, By.xpath("//div[@class='myaccount-orderhistory-table']/table/tbody/tr["+i+"]/td[1]/div[2]//a[text()='Invoice File']"));
								
								if (sinvoiceNumberDisplayed.equals(sInvoiceNum) && sInvoiceAmountDisplayed.equals(sInvoiceAmount) && bInvoiceFileExists)
								{
									System.out.println("Invoice details are displayed correctly in DSF and Invoice is attached");
									Login1.Logout();
								}
								else
								{
									System.err.println("Invoice Details are incorrect in DSF. Please investigate");
									TakeScreenshot.ScreenShotWindow(_driver, sTestcase);
									Assert.fail("Invoice Details are incorrect in DSF. Please investigate");
								}
								break;
							}
							else
							{
								System.err.println("DSF Order was not updated with Shipped Status");
								TakeScreenshot.ScreenShotWindow(_driver, sTestcase);
								Assert.fail("DSF Order was not updated with Completed And Invoiced Status");
							}
						}
					}
					
				}
				else
				{
					System.err.println("DSF Order was not Present");
					TakeScreenshot.ScreenShotWindow(_driver, sTestcase);
					Assert.fail("DSF Order was not present");
				}
			}
			catch (Exception e)
			{
				e.printStackTrace();
				TakeScreenshot.ScreenShotWindow(_driver, sTestcase);
				Assert.fail(sTestcase+" failed");
			}
		}
	}

}
